{"version":3,"sources":["../../src/MiniSidebar.jsx","../../src/MiniSidebarHeader.jsx","../../src/MiniSidebarNavigation.jsx","../../src/MiniSidebarNavigationItem.jsx","../../src/MiniSidebarNavigationIcon.jsx","../../src/MiniSidebarNavigationLabel.jsx","App.js","index.js"],"names":["Overlay","styled","props","Sidebar","CollapseBtn","MiniSidebar","collapseOnMd","withOverlay","expandOnHover","bgColor","btnColor","width","collapsedWidth","iconContainerWidth","collapseSpeed","useState","isMobile","useMediaQuery","query","active","collapsed","activeMd","onMouseEnter","setCollapsed","onMouseLeave","expanded","collapsableMd","expandedMd","color","onClick","Proptypes","number","Header","MiniSidebarHeader","className","string","Navigation","MiniSidebarNavigation","NavigationItem","MiniSidebarNavigationitem","hoverBgColor","hoverColor","NavigationIcon","MiniSidebarNavigationIcon","fillColor","NavigationLabel","MiniSidebarNavigationLabel","App","setCollapseOnMd","setWithOverlay","setExtendOnhover","fill","xmlns","viewBox","d","href","version","enable-background","style","marginLeft","marginTop","htmlFor","type","onChange","e","id","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4f11e164.chunk.js","sourcesContent":["import React, { Fragment } from 'react'\r\nimport { useState } from 'react'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport Proptypes from 'prop-types'\r\nimport styled from 'styled-components'\r\n\r\nconst Overlay = styled.div`\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background-color: ${props => props.activeMd ? 'rgba(0, 0, 0, 0.5)' : 'rgba(0, 0, 0, 0)'};\r\n    transition: background-color 1s;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 9999;\r\n    pointer-events: none;\r\n    ${props => props.active ?\r\n        `@media(max-width: 768px) {\r\n            background-color: rgba(0, 0, 0, 0.5);\r\n        }`: ''\r\n    }\r\n`\r\n\r\nconst Sidebar = styled.aside`\r\n    position: fixed;\r\n    overflow: hidden;\r\n    left: 0;\r\n    top: 0;\r\n    height: 100%;\r\n    background-color: ${props => props.bgColor || 'white'};\r\n    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12);\r\n    transition: width ${props => props.collapseSpeed}s;\r\n    z-index: 10000;\r\n    ${props => props.collapsableMd ?\r\n        `width: ${props.collapsedWidth || 70}px;`\r\n        :\r\n        `width: ${props.width || 250}px;`\r\n    }\r\n\r\n    ${props => props.expandedMd &&\r\n        `width: ${props.width || 250}px;`\r\n    }\r\n\r\n    @media(max-width: 768px) {\r\n        ${props => props.expanded ?\r\n        `width: ${props.width || 250}px;`\r\n        :\r\n        `width: ${props.collapsedWidth || 70}px;`\r\n    }\r\n    }\r\n\r\n    & .sidebar-nav-icon {\r\n        margin: 0 ${props => (props.collapsedWidth - props.iconContainerWidth)/2}px;\r\n        width: ${props => props.iconContainerWidth}px;\r\n    }\r\n\r\n    & .sidebar-nav-item {\r\n        width: ${props => props.width}px;\r\n    }\r\n\r\n    & .sidebar-nav-label {\r\n        width: ${props => props.width - props.iconContainerWidth - 50}px;\r\n    }\r\n\r\n    & .sidebar-header img, & .sidebar-header svg {\r\n        max-width: ${props => props.collapsedWidth - 15*2}px;\r\n    }\r\n\r\n`\r\n\r\nconst CollapseBtn = styled.button`\r\n    background-color: transparent;\r\n    padding-bottom: 10px;\r\n    display: ${props => props.collapseOnMd ? 'block' : 'none'};\r\n    border: none;\r\n    font-size: 40px;\r\n    position: absolute;\r\n    bottom: 15px;\r\n    left: 10px;\r\n    transition: transform ${props => props.collapseSpeed}s;\r\n    color: ${props => props.color};\r\n    \r\n    &:focus {\r\n        outline: none;\r\n    }\r\n\r\n    transform: ${props => props.collapsed ? 'rotate(0deg)' : 'rotate(180deg)'};\r\n\r\n    @media(max-width: 768px) {\r\n        display: block;\r\n    }\r\n\r\n`\r\n\r\nexport const MiniSidebar = ({ children, collapseOnMd = false, withOverlay = true, expandOnHover = false, bgColor = 'white', btnColor = \"black\", width = 250, collapsedWidth = 100, iconContainerWidth = 50, collapseSpeed = 1 }) => {\r\n    const [collapsed, setCollapsed] = useState(true);\r\n    const isMobile = useMediaQuery({ query: '(max-width: 768px)' })\r\n\r\n    return (\r\n        <>\r\n            <Overlay active={!collapsed && withOverlay} activeMd={!collapsed && collapseOnMd && withOverlay} />\r\n            <Sidebar\r\n                onMouseEnter={() => (expandOnHover && !isMobile) && setCollapsed(false)}\r\n                onMouseLeave={() => (expandOnHover && !isMobile) && setCollapsed(true)}\r\n                expanded={!collapsed}\r\n                collapsableMd={collapseOnMd}\r\n                expandedMd={!collapsed && collapseOnMd}\r\n                bgColor={bgColor}\r\n                width={width}\r\n                collapsedWidth={collapsedWidth}\r\n                iconContainerWidth={iconContainerWidth}\r\n                collapseSpeed={collapseSpeed}>\r\n\r\n                {children}\r\n\r\n                {(!expandOnHover || isMobile) &&\r\n                    <CollapseBtn color={btnColor} onClick={() => setCollapsed(!collapsed)} collapseOnMd={collapseOnMd} collapsed={collapsed} collapsedWidth={collapsedWidth} collapseSpeed={collapseSpeed}>\r\n                        â†’\r\n                    </CollapseBtn>\r\n                }\r\n\r\n            </Sidebar>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nMiniSidebar.propTypes = {\r\n    collapseOnMd: Proptypes.bool,\r\n    withOverlay: Proptypes.bool,\r\n    expandOnHover: Proptypes.bool,\r\n    bgColor: Proptypes.string,\r\n    btnColor: Proptypes.string,\r\n    width: Proptypes.number,\r\n    collapsedWidth: Proptypes.number,\r\n    iconContainerWidth: Proptypes.number,\r\n    collapseSpeed: Proptypes.number\r\n}","import React from \"react\"\r\nimport styled from \"styled-components\";\r\nimport Proptypes from 'prop-types'\r\n\r\nconst Header = styled.div`\r\n    border-bottom: solid 1px #e2e2e2;\r\n    padding: 15px;\r\n    color: ${props => props.color};\r\n`\r\n\r\nexport const MiniSidebarHeader = ({children, color='black'}) => {\r\n    return (\r\n        <Header className=\"sidebar-header\" color={color}>\r\n            {children}\r\n        </Header>\r\n    )\r\n}\r\n\r\nMiniSidebarHeader.propTypes = {\r\n    color: Proptypes.string\r\n}","import React from \"react\"\r\nimport styled from \"styled-components\";\r\n\r\nconst Navigation = styled.ul`\r\n    list-style: none;\r\n    padding-left: 0px;\r\n\r\n    & a {\r\n        text-decoration: none;\r\n    }\r\n`\r\n\r\nexport const MiniSidebarNavigation = (props) => {\r\n    return (\r\n        <nav>\r\n            <Navigation>\r\n                {props.children}\r\n            </Navigation>\r\n        </nav>\r\n    )\r\n}","import React from \"react\"\r\nimport styled from \"styled-components\";\r\nimport Proptypes from 'prop-types'\r\n\r\nconst NavigationItem = styled.li`\r\n    display: block;\r\n    padding-top: 10px;\r\n    padding-bottom: 10px;\r\n    color: ${props => props.color || 'black'};\r\n    &:hover {\r\n        background-color:  ${props => props.hoverBgColor};\r\n    }\r\n\r\n    .active & {\r\n        border-left: solid blue 2px;\r\n    }\r\n`\r\n\r\nexport const MiniSidebarNavigationitem = ({children, color='black', hoverBgColor=\"rgba(255, 255, 255, 0.1)\"}) => {\r\n    return (\r\n        <NavigationItem className=\"sidebar-nav-item\" color={color} hoverBgColor={hoverBgColor}>\r\n            {children}\r\n        </NavigationItem>\r\n    )\r\n}\r\n\r\nMiniSidebarNavigationitem.propTypes = {\r\n    color: Proptypes.string,\r\n    hoverColor: Proptypes.string\r\n}","import React from \"react\"\r\nimport styled from \"styled-components\";\r\nimport Proptypes from 'prop-types'\r\n\r\nconst NavigationIcon = styled.div`\r\n    display: inline-block;\r\n    width: 50px;\r\n    margin-right: 10px;\r\n    margin-left: 10px;\r\n    text-align: center;\r\n\r\n    & svg, & img {\r\n        max-width: 100%;\r\n        max-height: 30px;\r\n        margin: 0 auto;\r\n    }\r\n\r\n    & svg {\r\n        fill: ${props => props.fillColor};\r\n    }\r\n`\r\n\r\nexport const MiniSidebarNavigationIcon = ({children, fillColor=\"black\"}) => {\r\n    return (\r\n        <NavigationIcon className=\"sidebar-nav-icon\" fillColor={fillColor}>\r\n            {children}\r\n        </NavigationIcon>\r\n    )\r\n}\r\n\r\nMiniSidebarNavigationIcon.propTypes = {\r\n    fillColor: Proptypes.string\r\n}","import React from \"react\"\r\nimport styled from \"styled-components\";\r\n\r\nconst NavigationLabel = styled.div`\r\n    display: inline-block;\r\n    font-size: 20px;\r\n    font-weight: 100;\r\n    position: relative;\r\n    bottom: 8px;\r\n`\r\n\r\nexport const MiniSidebarNavigationLabel = (props) => {\r\n    return (\r\n        <NavigationLabel className=\"sidebar-nav-label\">\r\n            {props.children}\r\n        </NavigationLabel>\r\n    )\r\n}","import React, { useState } from 'react'\r\n\r\nimport { MiniSidebar, MiniSidebarHeader, MiniSidebarNavigation, MiniSidebarNavigationIcon, MiniSidebarNavigationitem, MiniSidebarNavigationLabel } from 'react-mini-sidebar'\r\n\r\nconst App = () => {\r\n  const [collapseOnMd, setCollapseOnMd] = useState(false)\r\n  const [withOverlay, setWithOverlay] = useState(false)\r\n  const [expandOnHover, setExtendOnhover] = useState(false)\r\n\r\n  return (\r\n    <>\r\n      <MiniSidebar bgColor=\"#0747a6\" btnColor=\"white\" collapseOnMd={collapseOnMd} withOverlay={withOverlay} expandOnHover={expandOnHover} width={200} collapsedWidth={70} collapseSpeed={0.2}>\r\n        <MiniSidebarHeader>\r\n          <svg fill=\"white\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0z\" /><path d=\"M12 18.178l4.62-1.256.623-6.778H9.026L8.822 7.89h8.626l.227-2.211H6.325l.636 6.678h7.82l-.261 2.866-2.52.667-2.52-.667-.158-1.844h-2.27l.329 3.544L12 18.178zM3 2h18l-1.623 18L12 22l-7.377-2L3 2z\" /></svg>\r\n        </MiniSidebarHeader>\r\n        <MiniSidebarNavigation>\r\n          <a href=\"/\">\r\n            <MiniSidebarNavigationitem color=\"white\">\r\n              <MiniSidebarNavigationIcon fillColor=\"white\">\r\n                <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 129 129\" enable-background=\"new 0 0 129 129\">\r\n                  <g>\r\n                    <path d=\"M51.6,96.7c11,0,21-3.9,28.8-10.5l35,35c0.8,0.8,1.8,1.2,2.9,1.2s2.1-0.4,2.9-1.2c1.6-1.6,1.6-4.2,0-5.8l-35-35   c6.5-7.8,10.5-17.9,10.5-28.8c0-24.9-20.2-45.1-45.1-45.1C26.8,6.5,6.5,26.8,6.5,51.6C6.5,76.5,26.8,96.7,51.6,96.7z M51.6,14.7   c20.4,0,36.9,16.6,36.9,36.9C88.5,72,72,88.5,51.6,88.5c-20.4,0-36.9-16.6-36.9-36.9C14.7,31.3,31.3,14.7,51.6,14.7z\" />\r\n                  </g>\r\n                </svg>\r\n              </MiniSidebarNavigationIcon>\r\n              <MiniSidebarNavigationLabel>\r\n                Search\r\n              </MiniSidebarNavigationLabel>\r\n            </MiniSidebarNavigationitem>\r\n          </a>\r\n\r\n          <MiniSidebarNavigationitem color=\"white\" hoverColor=\"rgba(255, 255, 255, 0.1)\">\r\n            <MiniSidebarNavigationIcon fillColor=\"white\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0z\" /><path d=\"M24 12l-5.657 5.657-1.414-1.414L21.172 12l-4.243-4.243 1.414-1.414L24 12zM2.828 12l4.243 4.243-1.414 1.414L0 12l5.657-5.657L7.07 7.757 2.828 12zm6.96 9H7.66l6.552-18h2.128L9.788 21z\" fill=\"#fff\" /></svg>\r\n            </MiniSidebarNavigationIcon>\r\n            <MiniSidebarNavigationLabel>\r\n              Add\r\n          </MiniSidebarNavigationLabel>\r\n          </MiniSidebarNavigationitem>\r\n\r\n          <MiniSidebarNavigationitem color=\"white\" hoverColor=\"rgba(255, 255, 255, 0.1)\">\r\n            <MiniSidebarNavigationIcon fillColor=\"white\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0z\" /><path d=\"M17 15.245v6.872a.5.5 0 0 1-.757.429L12 20l-4.243 2.546a.5.5 0 0 1-.757-.43v-6.87a8 8 0 1 1 10 0zm-8 1.173v3.05l3-1.8 3 1.8v-3.05A7.978 7.978 0 0 1 12 17a7.978 7.978 0 0 1-3-.582zM12 15a6 6 0 1 0 0-12 6 6 0 0 0 0 12z\" /></svg>\r\n            </MiniSidebarNavigationIcon>\r\n            <MiniSidebarNavigationLabel>\r\n              Awards\r\n          </MiniSidebarNavigationLabel>\r\n          </MiniSidebarNavigationitem>\r\n        </MiniSidebarNavigation>\r\n      </MiniSidebar>\r\n      <div style={{ marginLeft: \"30%\", marginTop: \"250px\" }}>\r\n        <label htmlFor=\"collapse\">Collapse sidebar on big screens:</label>\r\n        <input type=\"checkbox\" onChange={e => setCollapseOnMd(!collapseOnMd)} /> <br />\r\n\r\n        <label htmlFor=\"overlay\">Activate overlay:</label>\r\n        <input id=\"overlay\" type=\"checkbox\" onChange={e => setWithOverlay(!withOverlay)} /> <br />\r\n\r\n        <label htmlFor=\"hover\">Extend and collapse by hovering (big screen only):</label>\r\n        <input id=\"hover\" type=\"checkbox\" onChange={e => setExtendOnhover(!expandOnHover)} /> <br />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import './index.css'\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}